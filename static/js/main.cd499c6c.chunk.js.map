{"version":3,"sources":["QuoteFrame.js","App.js","reportWebVitals.js","index.js"],"names":["quote_lst","QuoteFrame","props","random_quote","bind","index","Math","floor","random","length","this","current_quote","author","forceUpdate","console","log","className","id","Button","href","size","target","icon","faTwitter","substr","faTumblr","onClick","React","Component","App","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAMIA,EAAY,CACZ,CAAC,qHAAsH,gBACvH,CAAC,8EAAgE,iBACjE,CAAC,8KAAqK,iBACtK,CAAC,iGAAyE,iBAC1E,CAAC,iDAA8B,iBAC/B,CAAC,+IAAsI,iBACvI,CAAC,wCAA0B,iBAC3B,CAAC,sCAA6B,iBAC9B,CAAC,6DAAoD,eACrD,CAAC,sGAA6F,iBAC9F,CAAC,qHAAkG,iBACnG,CAAC,uEAA8D,iBAC/D,CAAC,8HAAqH,iBACtH,CAAC,0EAAiE,iBAClE,CAAC,2HAAkH,iBACnH,CAAC,kHAAyG,iBAC1G,CAAC,yCAA2B,iBAC5B,CAAC,0CAA2C,kBAG3BC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKD,eAHU,E,gDAKnB,WACI,IAAIE,EAAQC,KAAKC,MAAMD,KAAKE,SAAWR,EAAUS,QACjDC,KAAKC,cAAgBX,EAAUK,GAAO,GACtCK,KAAKE,OAASZ,EAAUK,GAAO,GAC/BK,KAAKG,gB,oBAET,WAEI,OADAC,QAAQC,IAAI,mBACJ,sBAAKC,UAAU,cAAf,UACJ,sBAAKA,UAAU,QAAf,UACI,qBAAKC,GAAG,OAAR,SAAgBP,KAAKC,gBACrB,sBAAKM,GAAG,SAAR,UACI,uBACC,KAAOP,KAAKE,aAGrB,sBAAKI,UAAU,QAAf,UACI,cAACE,EAAA,EAAD,CACIC,KAAM,8EAA+ET,KAAKC,cAAgB,KAAOD,KAAKE,OACtHQ,KAAK,KACLJ,UAAU,cACVC,GAAG,cACHI,OAAO,SALX,SAOI,cAAC,IAAD,CAAiBC,KAAMC,QAE3B,cAACL,EAAA,EAAD,CACIC,KAAQ,6FAA+FT,KAAKE,OAAS,YAAcF,KAAKC,cAAca,OAAO,EAAEd,KAAKC,cAAcF,OAAS,GAAK,uFAChMW,KAAK,KACLJ,UAAU,cACVC,GAAG,SACHI,OAAO,SALX,SAOI,cAAC,IAAD,CAAiBC,KAAMG,QAE3B,cAACP,EAAA,EAAD,CAAQD,GAAG,YAAYD,UAAU,aAAaU,QAAShB,KAAKP,aAA5D,iC,GAzCwBwB,IAAMC,W,MCH/BC,MAnBf,WACE,OACE,qBAAKZ,GAAG,YAAYD,UAAU,MAA9B,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,IACA,oBAAGC,GAAG,SAAN,gCAEE,mBACED,UAAU,WACVG,KAAK,8BACLE,OAAO,SACPS,IAAI,6BAJN,gCCAKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cd499c6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faTumblr } from '@fortawesome/free-brands-svg-icons';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet quote_lst = [\r\n    [\"Before you marry a person, you should first make them use a computer with slow internet to see who they really are\", \"Will Ferrell\"],\r\n    [\"“You miss 100% of the shots you don’t take. - Wayne Gretzky”\", \"Michael Scott\"],\r\n    [\"“Wikipedia is the best thing ever. Anyone in the world can write anything they want about any subject so you know you are getting the best possible information.”\", \"Michael Scott\"],\r\n    [\"“I’m an early bird and I’m a night owl so I’m wise and I have worms.”\", \"Michael Scott\"],\r\n    [\"“I… Declare…. Bankruptcy!”\", \"Michael Scott\"],\r\n    [\"“It is St. Patrick's Day. And here in Scranton, that is a huge deal. It is the closest that the Irish will ever get to Christmas.”\", \"Michael Scott\"],\r\n    [\"“It’s Britney, bitch.”\", \"Michael Scott\"],\r\n    [\"“Where are the turtles?!”\", \"Michael Scott\"],\r\n    [\"“The worst thing about prison was the Dementors”\", \"Prison Mike\"],\r\n    [\"“And I knew exactly what to do. But in a much more real sense, I had no idea what to do.”\", \"Michael Scott\"],\r\n    [\"“I feel like all my kids grew up and then they married each other. It’s every parent’s dream.”\", \"Michael Scott\"],\r\n    [\"“I love inside jokes. I hope to be a part of one someday.”\", \"Michael Scott\"],\r\n    [\"“If I had a gun with two bullets and I was in a room with Hitler, Bin Laden, and Toby, I would shoot Toby twice.”\", \"Michael Scott\"],\r\n    [\"“You cheated on me?....When I specifically asked you not to?”\", \"Michael Scott\"],\r\n    [\"“Sometimes I'll start a sentence and I don't even know where it's going. I just hope I find it along the way.”\", \"Michael Scott\"],\r\n    [\"“Would I rather be feared or loved? Easy. Both. I want people to be afraid of how much they love me.”\", \"Michael Scott\"],\r\n    [\"“That’s what she said.”\", \"Michael Scott\"],\r\n    [\"Well, well, well, how the turntables...\", \"Michael Scott\"]\r\n];\r\n\r\nexport default class QuoteFrame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.random_quote = this.random_quote.bind(this);\r\n        this.random_quote();\r\n    }\r\n    random_quote() {\r\n        let index = Math.floor(Math.random() * quote_lst.length);\r\n        this.current_quote = quote_lst[index][0];\r\n        this.author = quote_lst[index][1];\r\n        this.forceUpdate();\r\n    }\r\n    render() {\r\n        console.log(\"this is the end\")\r\n        return (<div className=\"quote-frame\">\r\n            <div className=\"Quote\">\r\n                <div id=\"text\">{this.current_quote}</div>\r\n                <div id=\"author\">\r\n                    <br/>\r\n                    {\"- \" + this.author}\r\n                </div>\r\n            </div>\r\n            <div className=\"links\">\r\n                <Button \r\n                    href={\"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"+ this.current_quote + \" -\" + this.author}\r\n                    size=\"lg\" \r\n                    className=\"link-button\" \r\n                    id=\"tweet-quote\"\r\n                    target=\"_blank\"\r\n                >\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                </Button>\r\n                <Button\r\n                    href = {\"https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=\" + this.author + \"&content=\" + this.current_quote.substr(1,this.current_quote.length - 2) + \"&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button\"}\r\n                    size=\"lg\"\r\n                    className=\"link-button\"\r\n                    id=\"tumblr\"\r\n                    target=\"_blank\"\r\n                >\r\n                    <FontAwesomeIcon icon={faTumblr} />\r\n                </Button>\r\n                <Button id=\"new-quote\" className=\"new-button\" onClick={this.random_quote}>New quote</Button>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n","import './App.css';\r\nimport QuoteFrame from './QuoteFrame.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"quote-box\" className=\"App\">\r\n      <div className=\"main-div\">\r\n        <QuoteFrame />\r\n        <p id=\"footer\">\r\n          displayed to you by\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://github.com/basti-c3\"\r\n            target=\"_blank\"\r\n            rel=\"noopener author noreferrer\"\r\n          > basti-c3</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}